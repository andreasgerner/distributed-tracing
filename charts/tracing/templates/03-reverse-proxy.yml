apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "tracing.fullname" . }}-opentelemetry-proxy
  labels:
    {{- include "tracing.labels" . | nindent 4 }}
    app.kubernetes.io/component: opentelemetry-proxy
data:
  nginx.conf: |
    server {
        listen 8080;

        location /v1/traces {
            proxy_pass http://{{ include "tracing.fullname" . }}-opentelemetry-collector:4318/v1/traces;

            add_header Access-Control-Allow-Origin "{{ .Values.opentelemetryProxy.cors.allowedOrigin }}";
            add_header Access-Control-Allow-Methods "POST, OPTIONS";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tracing.fullname" . }}-opentelemetry-proxy
  labels:
    {{- include "tracing.labels" . | nindent 4 }}
    app.kubernetes.io/component: opentelemetry-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "tracing.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: opentelemetry-proxy
  template:
    metadata:
      labels:
        {{- include "tracing.labels" . | nindent 8 }}
        app.kubernetes.io/component: opentelemetry-proxy
    spec:
      containers:
        - name: opentelemetry-proxy
          {{- if .Values.global.imageRegistry }}
          image: "{{ .Values.global.imageRegistry }}/nginxinc/nginx-unprivileged:{{ .Values.opentelemetryProxy.imageTag | default .Values.defaultTag }}"
          {{- else }}
          image: "nginxinc/nginx-unprivileged:{{ .Values.opentelemetryProxy.imageTag | default .Values.defaultTag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
              readOnly: true
          resources:
            {{- toYaml .Values.opentelemetryProxy.resources | nindent 12 }}
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ include "tracing.fullname" . }}-opentelemetry-proxy
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "tracing.fullname" . }}-opentelemetry-proxy
  labels:
    {{- include "tracing.labels" . | nindent 4 }}
    app.kubernetes.io/component: opentelemetry-proxy
spec:
  ports:
    - port: 80
      name: http
      targetPort: http
  selector:
    {{- include "tracing.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: opentelemetry-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "tracing.fullname" . }}-opentelemetry-proxy
  labels:
    {{- include "tracing.labels" . | nindent 4 }}
    app.kubernetes.io/component: opentelemetry-proxy
spec:
  {{- if .Values.opentelemetryProxy.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.opentelemetryProxy.ingress.host }}
      secretName: {{ .Values.opentelemetryProxy.ingress.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.opentelemetryProxy.ingress.host }}
      http:
        paths:
          - backend:
              service:
                name: {{ include "tracing.fullname" . }}-opentelemetry-proxy
                port:
                  name: http
            pathType: ImplementationSpecific
